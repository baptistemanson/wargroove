{"version":3,"sources":["Form.js","App.js","serviceWorker.js","index.js"],"names":["pathDef","options","unitValues","Soldier","Spearman","Dog","damageTable","Form","state","attacker","attackerDefense","attackerLife","isCrit","defender","defenderDefense","defenderLife","_onSelect","field","event","_this","setState","Object","defineProperty","value","_onStarChange","_this2","this","_this$state","damage","attackValue","Math","min","maxAttackCost","attackCost","react_default","a","createElement","style","width","maring","flexDirection","display","alignItems","justifyContent","dist_default","className","onChange","placeholder","build_default","name","numberOfStars","rating","starDimension","starRatedColor","starEmptyColor","svgIconPath","changeRating","margin","padding","component_default","label","checked","toFixed","fontSize","React","Component","App","maxWidth","alt","src","Form_Form","marginTop","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5d6d4373.chunk.js","sourcesContent":["import React from \"react\";\nimport Dropdown from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\nimport StarRatingComponent from \"react-star-ratings\";\nimport Toggle from \"react-toggle\";\nimport \"react-toggle/style.css\";\n\nconst pathDef =\n  \"M23,42.3458062 L23,43 C22.8324032,42.8918531 22.6657366,42.783572 22.5,42.6751566 C22.3342634,42.783572 22.1675968,42.8918531 22,43 L22,42.3458062 C11.9786237,35.6985173 5.43629569,28.5489806 2.37301587,20.8971963 C-0.791005291,12.9937695 -0.791005291,6.02803738 2.37301587,0 L23,0 L42.6269841,0 C45.7910053,6.02803738 45.7910053,12.9937695 42.6269841,20.8971963 C39.5637043,28.5489806 33.0213763,35.6985173 23,42.3458062 Z\";\nconst options = [\"Soldier\", \"Spearman\", \"Dog\"];\n\nconst unitValues = { Soldier: 100, Spearman: 150, Dog: 200 };\n\nconst damageTable = {\n  Soldier: { Soldier: 55, Spearman: 35, Dog: 45 },\n  Spearman: { Soldier: 75, Spearman: 55, Dog: 80 },\n  Dog: { Soldier: 75, Spearman: 45, Dog: 65 }\n};\nexport default class Form extends React.Component {\n  state = {\n    attacker: options[0],\n    attackerDefense: 1,\n    attackerLife: 10,\n    isCrit: false,\n    defender: options[0],\n    defenderDefense: 1,\n    defenderLife: 10\n  };\n\n  _onSelect = field => event => {\n    this.setState({ [field]: event.value });\n  };\n\n  _onStarChange = field => value => {\n    this.setState({ [field]: value });\n  };\n\n  render() {\n    const {\n      attacker,\n      attackerDefense,\n      attackerLife,\n      isCrit,\n      defender,\n      defenderDefense,\n      defenderLife\n    } = this.state;\n    let damage =\n      (((attackerLife / 10) * damageTable[attacker][defender]) / 100) *\n      (1 - (0.1 * (defenderDefense - 1) * defenderLife) / 10);\n    if (isCrit) damage = damage * 1.5;\n\n    const attackValue =\n      unitValues[defender] * Math.min(defenderLife / 10, damage);\n    let maxAttackCost =\n      defenderLife * 10 - damageTable[attacker][defender] <= 0\n        ? 0\n        : (((unitValues[attacker] *\n            (defenderLife * 10 - damageTable[attacker][defender])) /\n            100) *\n            (1 - (0.1 * (attackerDefense - 1) * attackerLife) / 10) *\n            damageTable[defender][attacker]) /\n          100;\n    let attackCost = Math.min(\n      maxAttackCost,\n      100,\n      (unitValues[attacker] * attackerLife) / 10\n    );\n    return (\n      <form style={{ width: \"100%\" }}>\n        <div style={{ maring: 22 }}>\n          {\"Attacker \"}\n          <div\n            style={{\n              flexDirection: \"row\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"space-evenly\"\n            }}\n          >\n            <Dropdown\n              className=\"dropdown\"\n              options={options}\n              onChange={this._onSelect(\"attacker\")}\n              value={attacker}\n              placeholder=\"Select an attacker\"\n            />\n            <StarRatingComponent\n              name=\"attackerDefense\"\n              numberOfStars={5}\n              rating={attackerDefense}\n              starDimension=\"20px\"\n              starRatedColor=\"white\"\n              starEmptyColor=\"black\"\n              svgIconPath={pathDef}\n              changeRating={this._onStarChange(\"attackerDefense\")}\n            />\n          </div>\n          <div style={{ margin: 20 }}>\n            <div>Life</div>\n            <StarRatingComponent\n              name=\"attackerLife\"\n              numberOfStars={10}\n              starDimension=\"20px\"\n              starRatedColor=\"white\"\n              starEmptyColor=\"black\"\n              rating={attackerLife}\n              changeRating={this._onStarChange(\"attackerLife\")}\n            />\n          </div>\n        </div>\n        <div>\n          {\"Defender \"}\n          <div\n            style={{\n              flexDirection: \"row\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"space-evenly\"\n            }}\n          >\n            <Dropdown\n              options={options}\n              className=\"dropdown\"\n              onChange={this._onSelect(\"defender\")}\n              value={defender}\n              placeholder=\"Select an defender\"\n            />\n            <StarRatingComponent\n              name=\"defenderDefense\"\n              numberOfStars={5}\n              starDimension=\"20px\"\n              rating={defenderDefense}\n              starRatedColor=\"white\"\n              starEmptyColor=\"black\"\n              svgIconPath={pathDef}\n              changeRating={this._onStarChange(\"defenderDefense\")}\n            />\n          </div>\n          <div style={{ margin: 20 }}>\n            <div>Life</div>\n            <StarRatingComponent\n              name=\"defenderLife\"\n              numberOfStars={10}\n              starDimension=\"20px\"\n              starRatedColor=\"white\"\n              starEmptyColor=\"black\"\n              rating={defenderLife}\n              changeRating={this._onStarChange(\"defenderLife\")}\n            />\n          </div>\n        </div>\n        <div style={{ margin: 20 }}>\n          Is critical?\n          <div style={{ padding: 10 }}>\n            <Toggle\n              label=\"Critical\"\n              checked={isCrit}\n              onChange={value => {\n                this.setState({ isCrit: !this.state.isCrit });\n              }}\n            />\n          </div>\n        </div>\n        <div>\n          <div>\n            Attack Value: <b>{attackValue.toFixed(0)}</b>\n          </div>\n          <div>\n            Counter attack Cost: <b>{attackCost.toFixed(0)}</b>\n          </div>\n          <div style={{ fontSize: 22 }}>\n            Balance Attack: <b>{(attackValue - attackCost).toFixed(0)}</b>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Form from \"./Form\";\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img\n            style={{ width: \"70%\", maxWidth: 300 }}\n            alt=\"logo\"\n            src=\"logo.png\"\n          />\n          <h1>Damage calculator</h1>\n          <Form />\n          <div style={{ marginTop: 25, fontSize: 8 }}>\n            Copyright Baptiste Manson\n          </div>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}